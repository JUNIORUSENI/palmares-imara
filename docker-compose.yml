
services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - palmares_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: gunicorn --bind 0.0.0.0:8000 palmares.wsgi:application --workers 3 --timeout 120
    volumes:
      - static_files:/app/staticfiles
      - media_files:/app/media
    networks:
      - palmares_network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    env_file:
      - .env
    restart: unless-stopped

  nginx:
    image: nginx:1.29
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_files:/app/staticfiles
      - media_files:/app/media
    networks:
      - palmares_network
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  static_files:
  media_files:

networks:
  palmares_network:
    driver: bridge